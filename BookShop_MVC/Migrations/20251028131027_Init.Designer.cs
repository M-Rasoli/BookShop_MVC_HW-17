// <auto-generated />
using System;
using BookShop_MVC.Models.Infrastructure.DateBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookShop_MVC.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251028131027_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookShop_MVC.Models.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfPages")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasMaxLength(100)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "آدولف هیتلر",
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 12, DateTimeKind.Local),
                            ImgUrl = "/img/nabardman.jpg",
                            NumberOfPages = 430,
                            Price = 750000m,
                            Title = "نبرد من"
                        },
                        new
                        {
                            Id = 2,
                            Author = "افلاطون",
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            ImgUrl = "/img/jomhor.jpg",
                            NumberOfPages = 410,
                            Price = 600000m,
                            Title = "جمهور"
                        },
                        new
                        {
                            Id = 3,
                            Author = "چارلز داروین",
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            ImgUrl = "/img/khastgah.jpg",
                            NumberOfPages = 510,
                            Price = 750000m,
                            Title = "خاستگاه گونه‌ها"
                        },
                        new
                        {
                            Id = 4,
                            Author = "آنتوان دو سنت اگزوپری",
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            ImgUrl = "/img/shazde.jpg",
                            NumberOfPages = 120,
                            Price = 280000m,
                            Title = "شازده کوچولو"
                        },
                        new
                        {
                            Id = 5,
                            Author = "ارنست گامبریچ",
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            ImgUrl = "/img/tarikhhonar.jpg",
                            NumberOfPages = 680,
                            Price = 850000m,
                            Title = "تاریخ هنر"
                        });
                });

            modelBuilder.Entity("BookShop_MVC.Models.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            Description = "معاصر ، کلاسیک ",
                            Title = "رمان و داستان"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            Description = "غرب و شرق",
                            Title = "فلسفه و منطق"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            Description = "فناوری و تاریخ",
                            Title = "علمی و تاریخی"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            Description = "داستان های مصور",
                            Title = "کودک و نونجوان"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 12, 12, 12, 12, 12, 0, DateTimeKind.Local),
                            Description = "طراحی و نقاشی",
                            Title = "هنر و معماری"
                        });
                });

            modelBuilder.Entity("BookShop_MVC.Models.Entities.Book", b =>
                {
                    b.HasOne("BookShop_MVC.Models.Entities.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BookShop_MVC.Models.Entities.Category", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
